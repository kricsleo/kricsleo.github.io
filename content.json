{"pages":[],"posts":[{"title":"git-workflow","permalink":"http://kricsleo.github.io/2018/08/22/git-workflow/","text":"git的日常使用流程记录内容参考于阮一峰老师的Git使用规范流程，记录一下git的日常使用流程。 1. 新建分支开发新功能时都应该新建一个分支，在分支上开发，当功能开发完成时再合并到主分支，并销毁新建的分支。1234567# git checkout——检出，是我们的常用命令。最为常用的两种情形是创建分支和切换分支# 先切换到主分支，获取最新代码git checkout mastergit pull# 然后新建分支，在这个分支上进行新功能开发git checkout -b myfeature 2. 提交分支新功能开发完成以后提交代码12345678# 默认保存所有改动 --allgit add# 查看发生改动的地方git status# 提交改动，也可以跟上 --verbose，然后就可以列出diff比较的结果，并且附上本次提交信息git commit 3. 同步代码开发过程中可以经常同步主分支的最新代码，保证一直在最新的基础上进行开发1234567# git fetch 表示取回最新代码git fetch origin# 将有更新的代码与当前分支合并# 所取回的更新，在本地主机上要用\"远程主机名/分支名\"的形式读取。比如origin主机的master，就要用origin/master读取。# 或者使用： git merge origin/mastergit rebase origin/master 4. 合并多个commit新功能开发过程中一般会多次commit，但是在功能开发完成以后需要合并到主干时，一般把之前的commit合并成一个或几个关键的commit12# git rebase命令的i参数表示互动（interactive），具体如何合并请参见原文git rebase -i origin/master 5. 推送到远程仓库多个commit经过合理的处理以后就可以把当前分支推送到远程仓库了12# git push命令要加上force参数，因为rebase以后，分支历史改变了，跟远程分支不一定兼容，有可能要强行推送git push --force master myfeature 6. 发出Pull Request提交到远程仓库以后，就可以发出 Pull Request 到master分支，然后请求别人进行代码review，确认可以合并到master。 (end)"},{"title":"readme","permalink":"http://kricsleo.github.io/2018/08/22/readme/","text":"first pagraph"},{"title":"Hello World","permalink":"http://kricsleo.github.io/2018/08/22/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]}
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tarjan on World of Forks</title>
    <link>https://kricsleo.github.io/docs/tags/tarjan/</link>
    <description>Recent content in Tarjan on World of Forks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 02 Aug 2014 04:18:37 +0800</lastBuildDate>
    
	<atom:link href="https://kricsleo.github.io/docs/tags/tarjan/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>内网2073 城主GeassCode</title>
      <link>https://kricsleo.github.io/docs/posts/zjnu2073-geasscode/</link>
      <pubDate>Sat, 02 Aug 2014 04:18:37 +0800</pubDate>
      
      <guid>https://kricsleo.github.io/docs/posts/zjnu2073-geasscode/</guid>
      <description>&lt;p&gt;##Description&lt;/p&gt;

&lt;p&gt;GeassCode凭借自己在topcoder上的超凡表现，赢得了国王的喜爱，国王赏赐他一座城池。这座城池里有n个 村子，m条路连接这些村子。坐上城主的GeassCode决定要修路，他打算用最少的代价把所以的村子连在一起。据探子回报，有些村子之间虽然原来没有路 径，但是可以强行的去建一条路。GeassCode想知道，如果强行在某两个村子之间建一条路，最后的总花费是多少？&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>POJ1989 Distance Queries</title>
      <link>https://kricsleo.github.io/docs/posts/poj1989-distance-queries/</link>
      <pubDate>Fri, 01 Aug 2014 22:30:11 +0800</pubDate>
      
      <guid>https://kricsleo.github.io/docs/posts/poj1989-distance-queries/</guid>
      <description>&lt;p&gt;##Description&lt;/p&gt;

&lt;p&gt;Farmer John&amp;rsquo;s cows refused to run in his marathon since he chose a path much too long for their leisurely lifestyle. He therefore wants to find a path of a more reasonable length. The input to this problem consists of the same input as in &amp;ldquo;Navigation Nightmare&amp;rdquo;,followed by a line containing a single integer K, followed by K &amp;ldquo;distance queries&amp;rdquo;. Each distance query is a line of input containing two integers, giving the numbers of two farms between which FJ is interested in computing distance (measured in the length of the roads along the path between the two farms). Please answer FJ&amp;rsquo;s distance queries as quickly as possible!&lt;br /&gt;
&lt;br /&gt;
##Input&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>POJ1330 Nearest Common Ancestors</title>
      <link>https://kricsleo.github.io/docs/posts/poj1330-nearest-common-ancestors/</link>
      <pubDate>Fri, 01 Aug 2014 18:43:01 +0800</pubDate>
      
      <guid>https://kricsleo.github.io/docs/posts/poj1330-nearest-common-ancestors/</guid>
      <description>&lt;p&gt;Time Limit: 1000MS Memory Limit: 10000K&lt;br /&gt;
Total Submissions: 17734 Accepted: 9405&lt;/p&gt;

&lt;p&gt;##Description&lt;br /&gt;
A rooted tree is a well-known data structure in computer science and engineering. An example is shown below:&lt;/p&gt;

&lt;p&gt;In the figure, each node is labeled with an integer from {1, 2,&amp;hellip;,16}. Node 8 is the root of the tree. Node x is an ancestor of node y if node x is in the path between the root and node y. For example, node 4 is an ancestor of node 16. Node 10 is also an ancestor of node 16. As a matter of fact, nodes 8, 4, 10, and 16 are the ancestors of node 16. Remember that a node is an ancestor of itself. Nodes 8, 4, 6, and 7 are the ancestors of node 7. A node x is called a common ancestor of two different nodes y and z if node x is an ancestor of node y and an ancestor of node z. Thus, nodes 8 and 4 are the common ancestors of nodes 16 and 7. A node x is called the nearest common ancestor of nodes y and z if x is a common ancestor of y and z and nearest to y and z among their common ancestors. Hence, the nearest common ancestor of nodes 16 and 7 is node 4. Node 4 is nearer to nodes 16 and 7 than node 8 is.&lt;br /&gt;
&lt;br /&gt;
For other examples, the nearest common ancestor of nodes 2 and 3 is node 10, the nearest common ancestor of nodes 6 and 13 is node 8, and the nearest common ancestor of nodes 4 and 12 is node 4. In the last example, if y is an ancestor of z, then the nearest common ancestor of y and z is y.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HDU4005 The war</title>
      <link>https://kricsleo.github.io/docs/posts/hdu4005-the-war/</link>
      <pubDate>Thu, 31 Jul 2014 03:50:40 +0800</pubDate>
      
      <guid>https://kricsleo.github.io/docs/posts/hdu4005-the-war/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;font-family: Arial; font-size: 12px; font-weight: bold; color: green;&#34;&gt;Time Limit: &lt;sup&gt;2000&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1000&lt;/sub&gt; MS (Java/Others)    Memory Limit: &lt;sup&gt;65768&lt;/sup&gt;&amp;frasl;&lt;sub&gt;65768&lt;/sub&gt; K (Java/Others)&lt;br /&gt;
Total Submission(s): 1992    Accepted Submission(s): 440&lt;br /&gt;
&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;panel_title&#34; align=&#34;left&#34;&gt;Problem Description&lt;/div&gt;

&lt;div class=&#34;panel_content&#34;&gt;In the war, the intelligence about the enemy is very important. Now, our troop has mastered the situation of the enemy&#39;s war zones, and known that these war zones can communicate to each other directly or indirectly through the network. We also know the enemy is going to build a new communication line to strengthen their communication network. Our task is to destroy their communication network, so that some of their war zones can&#39;t communicate. Each line has its &#34;cost of destroy&#34;. If we want to destroy a line, we must spend the &#34;cost of destroy&#34; of this line. We want to finish this task using the least cost, but our enemy is very clever. Now, we know the network they have already built, but we know nothing about the new line which our enemy is going to build. In this condition, your task is to find the minimum cost that no matter where our enemy builds the new line, you can destroy it using the fixed money. Please give the minimum cost. For efficiency, we can only destroy one communication line.&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HDU4612 Warm up</title>
      <link>https://kricsleo.github.io/docs/posts/hdu4612-warm-up/</link>
      <pubDate>Thu, 31 Jul 2014 03:37:32 +0800</pubDate>
      
      <guid>https://kricsleo.github.io/docs/posts/hdu4612-warm-up/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;font-family: Arial; font-size: 12px; font-weight: bold; color: green;&#34;&gt;Time Limit: &lt;sup&gt;10000&lt;/sup&gt;&amp;frasl;&lt;sub&gt;5000&lt;/sub&gt; MS (Java/Others)    Memory Limit: &lt;sup&gt;65535&lt;/sup&gt;&amp;frasl;&lt;sub&gt;65535&lt;/sub&gt; K (Java/Others)&lt;br /&gt;
Total Submission(s): 3532    Accepted Submission(s): 813&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;panel_title&#34; align=&#34;left&#34;&gt;Problem Description&lt;/div&gt;

&lt;div class=&#34;panel_content&#34;&gt;　 　N planets are connected by M bidirectional channels that allow instant transportation. It&#39;s always possible to travel between any two planets through these channels.
If we can isolate some planets from others by breaking only one channel , the channel is called a bridge of the transportation system.
People don&#39;t like to be isolated. So they ask what&#39;s the minimal number of bridges they can have if they decide to build a new channel.
Note that there could be more than one channel between two planets.&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>